# Generated by Django 4.2.7 on 2023-12-06 17:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cookware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите название', max_length=100, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите название', max_length=100, verbose_name='Название')),
                ('description', models.CharField(help_text='Введите краткое описание', max_length=1000, verbose_name='Краткое описание')),
                ('proteins', models.FloatField(default=0, help_text='Введите белки в граммах', verbose_name='Белки, грамм')),
                ('fats', models.FloatField(default=0, help_text='Введите жиры в граммах', verbose_name='Жиры, грамм')),
                ('carbohydrates', models.FloatField(default=0, help_text='Введите углеводы в граммах', verbose_name='Углеводы, грамм')),
                ('calories', models.FloatField(default=0, help_text='Введите калории, ккал', verbose_name='Калории, ккал')),
                ('breakfast', models.BooleanField(default=False, help_text='Подходит для завтрака', verbose_name='Подходит для завтрака')),
                ('lunch', models.BooleanField(default=False, help_text='Подходит для обеда', verbose_name='Подходит для обеда')),
                ('dinner', models.BooleanField(default=False, help_text='Подходит для ужина', verbose_name='Подходит для ужина')),
                ('usualdiet', models.BooleanField(default=False, help_text='Подходит для обычного питания', verbose_name='Подходит для обычного питания')),
                ('weightloss', models.BooleanField(default=False, help_text='Подходит для похудения', verbose_name='Подходит для похудения')),
                ('weightgain', models.BooleanField(default=False, help_text='Подходит для набора веса', verbose_name='Подходит для набора веса')),
                ('recipe', models.TextField(help_text='Напишите рецепт приготовления', verbose_name='Рецепт')),
                ('time', models.CharField(default='Не указано', help_text='Укажите время готовки', max_length=100, verbose_name='Время готовки')),
                ('modercheck', models.BooleanField(default=False, help_text='Проверено модератором', verbose_name='Проверено модератором')),
                ('mainphoto', models.ImageField(blank=True, help_text='Выберите главное фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo1', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo2', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo3', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo4', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo5', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo6', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo7', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo8', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('photo9', models.ImageField(blank=True, help_text='Выберите фото блюда', null=True, upload_to='dish/', verbose_name='Фото')),
                ('date_create', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DishIngredients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.CharField(default='Не указано', help_text='Укажите кол-во', max_length=100, verbose_name='Кол-во')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Введите название', max_length=100, verbose_name='Название')),
                ('price', models.FloatField(default=0, help_text='Введите цену (за шт/кг)', verbose_name='Цена (за шт/кг)')),
                ('last_update_price', models.DateField(null=True)),
                ('other_names', models.TextField(help_text='Введите другие названия', null=True, verbose_name='Другие названия')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Напишите отзыв', verbose_name='Отзыв')),
                ('date_review', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
